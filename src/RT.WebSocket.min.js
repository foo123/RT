/**
*  RT
*  unified client-side real-time communication using (xhr) polling / bosh / (web)sockets for Node/JS
*  RT WebSocket Client (w/ websocket shim)
*
*  @version: 1.0.0
*  https://github.com/foo123/RT
*
**/
!function(e,t){"use strict";"object"==typeof exports?t(require("./RT.js")):t(e.RT)&&"function"==typeof define&&define.amd&&define(function(){return e.RT})}(this,function(e){"use strict";function t(e){var t,n,i=document.getElementsByTagName("scripts"),o=i[i.length-1].src.split("/").slice(0,-1).join("/"),s=document.getElementsByTagName("head")[0];window.swfobject||(t=document.createElement("script"),t.setAttribute("type","text/javascript"),t.setAttribute("language","javascript"),t.setAttribute("src",o+"/lib/ws/swfobject.js"),s.appendChild(t)),window.WEB_SOCKET_SWF_LOCATION=o+"/lib/ws/WebSocketMain.swf",window.WEB_SOCKET_FORCE_FLASH=!1,window.WEB_SOCKET_DEBUG=!1,n=document.createElement("script"),n.setAttribute("type","text/javascript"),n.setAttribute("language","javascript"),n.onload=n.onreadystatechange=function(){"loaded"!=n.readyState&&"complete"!=n.readyState||(n.onload=n.onreadystatechange=null,e&&e())},n.setAttribute("src",o+"/lib/ws/web_socket.js"),s.appendChild(n)}var n="prototype",i=(Object[n].toString,e.Client[n]),o=(e.Util,e.Platform.Node?require("ws"):window.WebSocket||window.MozWebSocket||window.WebkitWebSocket);return e.Platform.Node||o||t(function(){o=window.WebSocket}),e.Client.WS=function s(e){var t=this;return t instanceof s?(i.constructor.call(t,e),void(t.$ws$=null)):new s(e)},e.Client.Impl.ws=e.Client.Impl.websocket=e.Client.Impl["web-socket"]=e.Client.WS,e.Client.WS[n]=Object.create(i),e.Client.WS[n].constructor=e.Client.WS,e.Client.WS[n].$ws$=null,e.Client.WS[n].dispose=function(){var e=this;return e.$ws$=null,i.dispose.call(e)},e.Client.WS[n].abort=function(){var e=this,t=e.$ws$;return t&&o.OPEN===t.readyState&&(t.close(),i.abort.call(e,!0)),e.$ws$=null,e},e.Client.WS[n].close=function(e){var t=this,n=t.$ws$;return n&&o.OPEN===n.readyState&&n.close(),i.close.call(t,e),t},e.Client.WS[n].send=function(e){var t=this,n=t.$ws$;return n&&o.OPEN===n.readyState&&n.send(String(e)),t},e.Client.WS[n].listen=function(){var e,t=this;return o?(e=t.$ws$=new o(t.$cfg$.endpoint),e.addEventListener("open",function(e){t.open(e)}),e.addEventListener("close",function(e){t.close(e)}),e.addEventListener("error",function(e){t.emit("error",e)}),e.addEventListener("message",function(e){t.emit("receive",e.data)}),t):(setTimeout(function(){t.listen()},100),t)},e});